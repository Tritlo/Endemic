Up to date
SCOPE:
  import Prelude hiding (id, ($), ($!), asTypeOf)
  import Test.QuickCheck (quickCheckWithResult, Result(..), stdArgs, Args(..), isSuccess, (==>))
TARGET TYPE:
  [Int] -> Int
MUST SATISFY:
  prop_IsSymmetric f xs = f xs == f (reverse xs)
  prop_Bin f = f [] == 0 || f [] == 1
  prop_not_const f = not ((f []) == f [1,2,3])
IN CONTEXT:
  zero = 0 :: Int
  one = 1 :: Int
PARAMETERS:
  MAX HOLES: 2
  MAX DEPTH: 2
SYNTHESIZING...
GENERATING CANDIDATES...DONE!
GENERATED 6483 CANDIDATES!
COMPILING CANDIDATE CHECKS...DONE!
CHECKING 6483 CANDIDATES...DONE!
FOUND 387 MATCHES:
length
product
sum
(foldl (-) zero)
(foldl (-) one)
(foldl (-) (negate zero))
(foldl (-) (pred one))
(foldl (-) (succ zero))
(foldl (-) (toEnum zero))
(foldl (-) (toEnum one))
(foldl (-) (abs zero))
(foldl (-) (abs one))
(foldl (-) (signum zero))
(foldl (-) (signum one))
(foldl (-) (signum maxBound))
(foldl gcd zero)
(foldl gcd (negate zero))
(foldl gcd (pred one))
(foldl gcd (toEnum zero))
(foldl gcd (abs zero))
(foldl gcd (signum zero))
(foldl (*) one)
(foldl (*) (succ zero))
(foldl (*) (toEnum one))
(foldl (*) (abs one))
(foldl (*) (signum one))
(foldl (*) (signum maxBound))
(foldl (+) zero)
(foldl (+) one)
(foldl (+) (negate zero))
(foldl (+) (pred one))
(foldl (+) (succ zero))
(foldl (+) (toEnum zero))
(foldl (+) (toEnum one))
(foldl (+) (abs zero))
(foldl (+) (abs one))
(foldl (+) (signum zero))
(foldl (+) (signum one))
(foldl (+) (signum maxBound))
(foldl max zero)
(foldl max one)
(foldl max (negate zero))
(foldl max (pred one))
(foldl max (succ zero))
(foldl max (toEnum zero))
(foldl max (toEnum one))
(foldl max (abs zero))
(foldl max (abs one))
(foldl max (signum zero))
(foldl max (signum one))
(foldl max (signum maxBound))
(foldl (curry length) zero)
(foldl (curry length) (negate zero))
(foldl (curry length) (pred one))
(foldl (curry length) (toEnum zero))
(foldl (curry length) (abs zero))
(foldl (curry length) (signum zero))
(foldl (flip subtract) zero)
(foldl (flip subtract) one)
(foldl (flip subtract) (negate zero))
(foldl (flip subtract) (pred one))
(foldl (flip subtract) (succ zero))
(foldl (flip subtract) (toEnum zero))
(foldl (flip subtract) (toEnum one))
(foldl (flip subtract) (abs zero))
(foldl (flip subtract) (abs one))
(foldl (flip subtract) (signum zero))
(foldl (flip subtract) (signum one))
(foldl (flip subtract) (signum maxBound))
(foldl (flip gcd) zero)
(foldl (flip gcd) (negate zero))
(foldl (flip gcd) (pred one))
(foldl (flip gcd) (toEnum zero))
(foldl (flip gcd) (abs zero))
(foldl (flip gcd) (signum zero))
(foldl (flip (*)) one)
(foldl (flip (*)) (succ zero))
(foldl (flip (*)) (toEnum one))
(foldl (flip (*)) (abs one))
(foldl (flip (*)) (signum one))
(foldl (flip (*)) (signum maxBound))
(foldl (flip (+)) zero)
(foldl (flip (+)) one)
(foldl (flip (+)) (negate zero))
(foldl (flip (+)) (pred one))
(foldl (flip (+)) (succ zero))
(foldl (flip (+)) (toEnum zero))
(foldl (flip (+)) (toEnum one))
(foldl (flip (+)) (abs zero))
(foldl (flip (+)) (abs one))
(foldl (flip (+)) (signum zero))
(foldl (flip (+)) (signum one))
(foldl (flip (+)) (signum maxBound))
(foldl (flip max) zero)
(foldl (flip max) one)
(foldl (flip max) (negate zero))
(foldl (flip max) (pred one))
(foldl (flip max) (succ zero))
(foldl (flip max) (toEnum zero))
(foldl (flip max) (toEnum one))
(foldl (flip max) (abs zero))
(foldl (flip max) (abs one))
(foldl (flip max) (signum zero))
(foldl (flip max) (signum one))
(foldl (flip max) (signum maxBound))
(foldr subtract zero)
(foldr subtract one)
(foldr subtract (negate zero))
(foldr subtract (pred one))
(foldr subtract (succ zero))
(foldr subtract (toEnum zero))
(foldr subtract (toEnum one))
(foldr subtract (abs zero))
(foldr subtract (abs one))
(foldr subtract (signum zero))
(foldr subtract (signum one))
(foldr subtract (signum maxBound))
(foldr gcd zero)
(foldr gcd (negate zero))
(foldr gcd (pred one))
(foldr gcd (toEnum zero))
(foldr gcd (abs zero))
(foldr gcd (signum zero))
(foldr (*) one)
(foldr (*) (succ zero))
(foldr (*) (toEnum one))
(foldr (*) (abs one))
(foldr (*) (signum one))
(foldr (*) (signum maxBound))
(foldr (+) zero)
(foldr (+) one)
(foldr (+) (negate zero))
(foldr (+) (pred one))
(foldr (+) (succ zero))
(foldr (+) (toEnum zero))
(foldr (+) (toEnum one))
(foldr (+) (abs zero))
(foldr (+) (abs one))
(foldr (+) (signum zero))
(foldr (+) (signum one))
(foldr (+) (signum maxBound))
(foldr max zero)
(foldr max one)
(foldr max (negate zero))
(foldr max (pred one))
(foldr max (succ zero))
(foldr max (toEnum zero))
(foldr max (toEnum one))
(foldr max (abs zero))
(foldr max (abs one))
(foldr max (signum zero))
(foldr max (signum one))
(foldr max (signum maxBound))
(foldr (curry length) zero)
(foldr (curry length) (negate zero))
(foldr (curry length) (pred one))
(foldr (curry length) (toEnum zero))
(foldr (curry length) (abs zero))
(foldr (curry length) (signum zero))
(foldr (flip (-)) zero)
(foldr (flip (-)) one)
(foldr (flip (-)) (negate zero))
(foldr (flip (-)) (pred one))
(foldr (flip (-)) (succ zero))
(foldr (flip (-)) (toEnum zero))
(foldr (flip (-)) (toEnum one))
(foldr (flip (-)) (abs zero))
(foldr (flip (-)) (abs one))
(foldr (flip (-)) (signum zero))
(foldr (flip (-)) (signum one))
(foldr (flip (-)) (signum maxBound))
(foldr (flip gcd) zero)
(foldr (flip gcd) (negate zero))
(foldr (flip gcd) (pred one))
(foldr (flip gcd) (toEnum zero))
(foldr (flip gcd) (abs zero))
(foldr (flip gcd) (signum zero))
(foldr (flip (*)) one)
(foldr (flip (*)) (succ zero))
(foldr (flip (*)) (toEnum one))
(foldr (flip (*)) (abs one))
(foldr (flip (*)) (signum one))
(foldr (flip (*)) (signum maxBound))
(foldr (flip (+)) zero)
(foldr (flip (+)) one)
(foldr (flip (+)) (negate zero))
(foldr (flip (+)) (pred one))
(foldr (flip (+)) (succ zero))
(foldr (flip (+)) (toEnum zero))
(foldr (flip (+)) (toEnum one))
(foldr (flip (+)) (abs zero))
(foldr (flip (+)) (abs one))
(foldr (flip (+)) (signum zero))
(foldr (flip (+)) (signum one))
(foldr (flip (+)) (signum maxBound))
(foldr (flip max) zero)
(foldr (flip max) one)
(foldr (flip max) (negate zero))
(foldr (flip max) (pred one))
(foldr (flip max) (succ zero))
(foldr (flip max) (toEnum zero))
(foldr (flip max) (toEnum one))
(foldr (flip max) (abs zero))
(foldr (flip max) (abs one))
(foldr (flip max) (signum zero))
(foldr (flip max) (signum one))
(foldr (flip max) (signum maxBound))
(foldr (const negate) one)
(foldr (const negate) (succ zero))
(foldr (const negate) (toEnum one))
(foldr (const negate) (abs one))
(foldr (const negate) (signum one))
(foldr (const negate) (signum maxBound))
(foldr (const pred) zero)
(foldr (const pred) one)
(foldr (const pred) (negate zero))
(foldr (const pred) (pred one))
(foldr (const pred) (succ zero))
(foldr (const pred) (toEnum zero))
(foldr (const pred) (toEnum one))
(foldr (const pred) (abs zero))
(foldr (const pred) (abs one))
(foldr (const pred) (signum zero))
(foldr (const pred) (signum one))
(foldr (const pred) (signum maxBound))
(foldr (const succ) zero)
(foldr (const succ) one)
(foldr (const succ) (negate zero))
(foldr (const succ) (pred one))
(foldr (const succ) (succ zero))
(foldr (const succ) (toEnum zero))
(foldr (const succ) (toEnum one))
(foldr (const succ) (abs zero))
(foldr (const succ) (abs one))
(foldr (const succ) (signum zero))
(foldr (const succ) (signum one))
(foldr (const succ) (signum maxBound))
(foldr (return negate) one)
(foldr (return negate) (succ zero))
(foldr (return negate) (toEnum one))
(foldr (return negate) (abs one))
(foldr (return negate) (signum one))
(foldr (return negate) (signum maxBound))
(foldr (return pred) zero)
(foldr (return pred) one)
(foldr (return pred) (negate zero))
(foldr (return pred) (pred one))
(foldr (return pred) (succ zero))
(foldr (return pred) (toEnum zero))
(foldr (return pred) (toEnum one))
(foldr (return pred) (abs zero))
(foldr (return pred) (abs one))
(foldr (return pred) (signum zero))
(foldr (return pred) (signum one))
(foldr (return pred) (signum maxBound))
(foldr (return succ) zero)
(foldr (return succ) one)
(foldr (return succ) (negate zero))
(foldr (return succ) (pred one))
(foldr (return succ) (succ zero))
(foldr (return succ) (toEnum zero))
(foldr (return succ) (toEnum one))
(foldr (return succ) (abs zero))
(foldr (return succ) (abs one))
(foldr (return succ) (signum zero))
(foldr (return succ) (signum one))
(foldr (return succ) (signum maxBound))
(foldr (pure negate) one)
(foldr (pure negate) (succ zero))
(foldr (pure negate) (toEnum one))
(foldr (pure negate) (abs one))
(foldr (pure negate) (signum one))
(foldr (pure negate) (signum maxBound))
(foldr (pure pred) zero)
(foldr (pure pred) one)
(foldr (pure pred) (negate zero))
(foldr (pure pred) (pred one))
(foldr (pure pred) (succ zero))
(foldr (pure pred) (toEnum zero))
(foldr (pure pred) (toEnum one))
(foldr (pure pred) (abs zero))
(foldr (pure pred) (abs one))
(foldr (pure pred) (signum zero))
(foldr (pure pred) (signum one))
(foldr (pure pred) (signum maxBound))
(foldr (pure succ) zero)
(foldr (pure succ) one)
(foldr (pure succ) (negate zero))
(foldr (pure succ) (pred one))
(foldr (pure succ) (succ zero))
(foldr (pure succ) (toEnum zero))
(foldr (pure succ) (toEnum one))
(foldr (pure succ) (abs zero))
(foldr (pure succ) (abs one))
(foldr (pure succ) (signum zero))
(foldr (pure succ) (signum one))
(foldr (pure succ) (signum maxBound))
(head (repeat length))
(head (repeat product))
(head (repeat sum))
(head (return length))
(head (return product))
(head (return sum))
(head (pure length))
(head (pure product))
(head (pure sum))
(last (return length))
(last (return product))
(last (return sum))
(last (pure length))
(last (pure product))
(last (pure sum))
((!!) (repeat length) zero)
((!!) (repeat length) one)
((!!) (repeat length) (negate zero))
((!!) (repeat length) (pred one))
((!!) (repeat length) (succ zero))
((!!) (repeat length) (succ one))
((!!) (repeat length) (toEnum zero))
((!!) (repeat length) (toEnum one))
((!!) (repeat length) (abs zero))
((!!) (repeat length) (abs one))
((!!) (repeat length) (signum zero))
((!!) (repeat length) (signum one))
((!!) (repeat length) (signum maxBound))
((!!) (repeat product) zero)
((!!) (repeat product) one)
((!!) (repeat product) (negate zero))
((!!) (repeat product) (pred one))
((!!) (repeat product) (succ zero))
((!!) (repeat product) (succ one))
((!!) (repeat product) (toEnum zero))
((!!) (repeat product) (toEnum one))
((!!) (repeat product) (abs zero))
((!!) (repeat product) (abs one))
((!!) (repeat product) (signum zero))
((!!) (repeat product) (signum one))
((!!) (repeat product) (signum maxBound))
((!!) (repeat sum) zero)
((!!) (repeat sum) one)
((!!) (repeat sum) (negate zero))
((!!) (repeat sum) (pred one))
((!!) (repeat sum) (succ zero))
((!!) (repeat sum) (succ one))
((!!) (repeat sum) (toEnum zero))
((!!) (repeat sum) (toEnum one))
((!!) (repeat sum) (abs zero))
((!!) (repeat sum) (abs one))
((!!) (repeat sum) (signum zero))
((!!) (repeat sum) (signum one))
((!!) (repeat sum) (signum maxBound))
((!!) (return length) zero)
((!!) (return length) (negate zero))
((!!) (return length) (pred one))
((!!) (return length) (toEnum zero))
((!!) (return length) (abs zero))
((!!) (return length) (signum zero))
((!!) (return product) zero)
((!!) (return product) (negate zero))
((!!) (return product) (pred one))
((!!) (return product) (toEnum zero))
((!!) (return product) (abs zero))
((!!) (return product) (signum zero))
((!!) (return sum) zero)
((!!) (return sum) (negate zero))
((!!) (return sum) (pred one))
((!!) (return sum) (toEnum zero))
((!!) (return sum) (abs zero))
((!!) (return sum) (signum zero))
((!!) (pure length) zero)
((!!) (pure length) (negate zero))
((!!) (pure length) (pred one))
((!!) (pure length) (toEnum zero))
((!!) (pure length) (abs zero))
((!!) (pure length) (signum zero))
((!!) (pure product) zero)
((!!) (pure product) (negate zero))
((!!) (pure product) (pred one))
((!!) (pure product) (toEnum zero))
((!!) (pure product) (abs zero))
((!!) (pure product) (signum zero))
((!!) (pure sum) zero)
((!!) (pure sum) (negate zero))
((!!) (pure sum) (pred one))
((!!) (pure sum) (toEnum zero))
((!!) (pure sum) (abs zero))
((!!) (pure sum) (signum zero))

real    4m6.056s
user    0m56.841s
sys     3m4.300s